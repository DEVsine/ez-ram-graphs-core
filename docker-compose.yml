version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ezram_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ez_ram}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-25432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ezram_network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: ezram_neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-password}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_server_memory_heap_initial__size: 512m
      NEO4J_server_memory_heap_max__size: 2G
      NEO4J_server_memory_pagecache_size: 1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    # Using different ports to avoid conflicts with local Neo4j
    # Docker Neo4j: 7500 (HTTP) and 7690 (Bolt)
    # Local Neo4j: 7474, 7687, 7688
    ports:
      - "${NEO4J_HTTP_PORT:-7500}:7474"
      - "${NEO4J_BOLT_PORT:-7690}:7687"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ezram_network

  # Django Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ezram_web
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120 --reload
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "${PORT:-8001}:8000"
    environment:
      # Django settings
      DJANGO_SETTINGS_MODULE: core.settings
      SECRET_KEY: ${SECRET_KEY:-django-insecure-change-this-in-production}
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,web}

      # PostgreSQL
      POSTGRES_DB: ${POSTGRES_DB:-ez_ram}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432

      # Neo4j
      NEO4J_BOLT_URL: bolt://${NEO4J_USERNAME:-neo4j}:${NEO4J_PASSWORD:-password}@neo4j:7687

      # AI API Keys (optional - set in .env)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}

      # Superuser creation (optional)
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME:-}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD:-}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL:-}
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ezram_network

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  static_volume:
  media_volume:

networks:
  ezram_network:
    driver: bridge
